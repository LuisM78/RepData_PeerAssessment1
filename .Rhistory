pwd
ls
getwd()
library(datasets)
data(iris)
names(iris)
Iris$Sepal.Length
iris$Sepal.Length
Length(iris)
length(iris)
length(iris$Sepal.Length)
length(iris$Species)
names(iris$Species)
iris(Species)
iris$species
iris$Species
length(iris$Species)
names(iris$Species)
names(iris)
iris
View(iris)
View(iris)
install.packages(“RMySQL”, type = “source”)
install.packages(“RMySQL”, type = “source”)
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
library(RMySQL)
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
library(RMySQL)
library(RMySQL)
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("DBI")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
library(RTools)
install.packages("RTools")
library(RTools)
Sys.getenv('PATH')
system('g++ -v')
install.packages("RMySQL", type = "source")
library(RTools)
Sys.setenv(MYSQL_HOME = “C:/Program Files/MySQL/MySQL Server 5.6
Sys.setenv(MYSQL_HOME = “C:/Program Files/MySQL/MySQL Server 5.6")
Sys.setenv(MYSQL_HOME = “C:/Program Files/MySQL/MySQL Server 5.6″)
Sys.setenv(MYSQL_HOME = “C:\Program Files\MySQL\MySQL Server 5.6″)
Sys.setenv(MYSQL_HOME = “C:\Program Files\MySQL\MySQL Server 5.6“)
Sys.setenv(MYSQL_HOME = 'C:\Program Files\MySQL\MySQL Server 5.6)
Sys.setenv(MYSQL_HOME = 'C:\Program Files\MySQL\MySQL Server 5.6')
Sys.getenv()
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
library(RMySQL)
library('RMySQL')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
Sys.getenv('MYSQL_HOME')
install.packages(“RMySQL”, type = “source”)
install.packages(“RMySQL”, type = “source”)
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
library(Rtools)
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("RMySQL", type = "source")
Sys.getenv("PATH")
system('g++ -v')
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("Rtools")
library(maniguplate)
library(manipulate)
install.packages("ggplot2")
install.packages("devtools")
gcc
system('g++ -v')
install.packages("RMySQL", type = "source")
library(RMySQL)
library(RMySQL)
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb);
result
hg19 <- dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysqul.cse.ucsc.edu")
hg19 <- dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19,"slect count(*) from affyU144Plus2")
dbGetQuery(hg19,"select count(*) from affyU144Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19,"affyU133Plus2")
View(affyData)
head(affyData)
query <- dbSendQuery(hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <-fetch(query); quantile(affyMis$Matches)
query <- dbSendQuery(hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
query <- dbSendQuery(hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
query2 <- dbSendQuery(hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
head(affyData)
query2 <- dbSendQuery(hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
affyMisSmall <- fetch(query,n=10); dbClearResult(query);
dim(affyMisSmall)
query2 <- dbSendQuery(hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis2 <- fetch(query2); quantile(affyMis$Matches)
query2 <- dbSendQuery(hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
dbClearResult(query)
dbClearResult(query2)
query2 <- dbSendQuery(hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query2)
quantile(affyMis$misMatches)
dbDisconnect(hg19)
dvClearResult(query2)
dbClearResult(query2)
dbDisconnect(hg19)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
biocLite("rhdf5")
biocLite("rhdf5")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
created
library(XML)
library(XML)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url,useInternalNodes=T)
xpathSApply(htmal,"//title",xmlValue)
xpathSApply(html,"//title",xmlValue)
xpathSAppl(html,"//td[@id='col-citedby']",xmlValue)
xpathSApply(html,"//td[@id='col-citedby']",xmlValue)
install.packages("httr")
library(httr)
html2=GET(url)
content2 = content(html2,as="text")
parsedHtml = htmlParse(conent2,asText=TRUE)
parsedHtml = htmlParse(content2,asText=TRUE)
xpathSApply(parsedHtml,"//title",xmlValue)
paredHTML
parsedHtml
xpathSApply(parsedHtml,"//td",xmlValue)
xpathSApply(parsedHtml,"//td[@id=col-citedby']",xmlValue)
xpathSApply(parsedHtml,"//tdcol-citedby']",xmlValue)
xpathSApply(parsedHtml,"//tdcol-citedby]",xmlValue)
xpathSApply(parsedHtml,"//td]",xmlValue)
xpathSApply(parsedHtml,"//td",xmlValue)
setwd("~/")
setwd("E:/Dropbox/Data Specialization JHU/Reproducible Research/Peer Project 1/RepData_PeerAssessment1")
mean(totalstepsperday)
data <- read.csv(unz("activity.zip","activity.csv"))
data_unaltered <- read.csv(unz("activity.zip","activity.csv"))
data_type<-as.Date(data$date,"%Y-%m-%d")
data$time_type <- data_type
newdata<- data[complete.cases(data),]
totalstepsperday <- aggregate(newdata$steps,by=list(newdata$time_type),FUN=sum)
meantotalperday <-aggregate(newdata$steps,by=list(newdata$time_type),FUN=mean)
mean(totalstepsperday)
View(totalstepsperday)
totalstepsperday <- aggregate(newdata$steps,by=list(newdata$time_type),FUN=sum)
meantotalperday <-aggregate(newdata$steps,by=list(newdata$time_type),FUN=mean)
mean(totalstepsperday$x)
median(totalstepsperday$x)
hist(totalstepsperday$x,xlab="Steps per day")
mediantotalperday <-aggregate(newdata$steps,by=list(newdata$time_type),FUN=median)
newdata2 <-meantotalperday
newdata2$median <- mediantotalperday$x
colnames(newdata2)[2]<-"Meantotalperday"
colnames(newdata2)[1]<-"Date"
print(newdata2)
averagenumberofstpes<-aggregate(newdata$steps,by=list(newdata$interval),FUN=mean)
plot(averagenumberofstpes$Group.1,averagenumberofstpes$x,xlab="interval",ylab="AverageNumberofSteps",type="l")
interval<-averagenumberofstpes[averagenumberofstpes$x==max(averagenumberofstpes$x),]$Group.1
print(interval)
newdata3<- data[!complete.cases(data),]
missingrows<-nrow(newdata3)
print(missingrows)
